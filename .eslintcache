[{"/Users/vishalranjan/Projects/hooks-todo/src/index.js":"1","/Users/vishalranjan/Projects/hooks-todo/src/App.js":"2","/Users/vishalranjan/Projects/hooks-todo/src/reportWebVitals.js":"3","/Users/vishalranjan/Projects/hooks-todo/src/context.js":"4","/Users/vishalranjan/Projects/hooks-todo/src/reducer.js":"5","/Users/vishalranjan/Projects/hooks-todo/src/Components/TodoList.js":"6","/Users/vishalranjan/Projects/hooks-todo/src/Components/TODOForm.js":"7"},{"size":1627,"mtime":1607081750311,"results":"8","hashOfConfig":"9"},{"size":1287,"mtime":1607008706395,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607000285920,"results":"11","hashOfConfig":"9"},{"size":338,"mtime":1607086492162,"results":"12","hashOfConfig":"9"},{"size":1837,"mtime":1607339633330,"results":"13","hashOfConfig":"9"},{"size":957,"mtime":1607086455034,"results":"14","hashOfConfig":"9"},{"size":966,"mtime":1607093800639,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"tmkcvy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/vishalranjan/Projects/hooks-todo/src/index.js",[],["33","34"],"/Users/vishalranjan/Projects/hooks-todo/src/App.js",[],["35","36"],"/Users/vishalranjan/Projects/hooks-todo/src/reportWebVitals.js",[],"/Users/vishalranjan/Projects/hooks-todo/src/context.js",[],"/Users/vishalranjan/Projects/hooks-todo/src/reducer.js",[],"/Users/vishalranjan/Projects/hooks-todo/src/Components/TodoList.js",[],"/Users/vishalranjan/Projects/hooks-todo/src/Components/TODOForm.js",["37"],"import {useState, useEffect, useContext} from 'react'\nimport todoContext from '../context'\n\nexport default function TODOFORM() {\n    const [todo, setTodo] = useState(\"\")\n    const {state: {currentTodo = {}},dispatch} = useContext(todoContext)\n\n    useEffect(() => {\n        if(currentTodo.text) {\n            setTodo(currentTodo.text)\n        }\n        else {\n            setTodo(\"\")\n        }\n    }, [currentTodo.id])  //useEffect used to check if there is any currentTodo available and useEffect will be called only when currentTodo id changes\n\n    const handleSubmit = (event) => {\nevent.preventDefault();\nif(currentTodo.text) {\n    dispatch({type: \"UPDATE_TODO\", payload: todo})\n}\nelse {\ndispatch({type: \"ADD_TODO\", payload: todo})\n}\nsetTodo(\"\")\n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <input  type=\"text\"  placeholder=\"Enter todo here!!\" value={todo} onChange={(event) => setTodo(event.target.value)}/>\n        </form>\n    )\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":15,"column":8,"nodeType":"46","endLine":15,"endColumn":24,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentTodo.text'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [currentTodo.id, currentTodo.text]",{"range":"53","text":"54"},[401,417],"[currentTodo.id, currentTodo.text]"]